function [h, display_array] = displayLI(X, example_width)
%DISPLAYDATA Display 2D data in a nice grid
%   [h, display_array] = DISPLAYDATA(X, example_width) displays 2D data
%   stored in X in a nice grid. It returns the figure handle h and the 
%   displayed array if requested.

% Set example_width automatically if not passed in
if ~exist('example_width', 'var') || isempty(example_width) 
	example_width = round(sqrt(size(X, 2)));
end

% Gray Image
%map = [0 0 0;0.0248366016894579 0.0224598944187164 0.0293523464351892;0.0496732033789158 0.0449197888374329 0.0587046928703785;0.0745098069310188 0.0673796832561493 0.0880570411682129;0.0993464067578316 0.0898395776748657 0.117409385740757;0.124183006584644 0.112299464643002 0.146761730313301;0.149019613862038 0.134759366512299 0.176114082336426;0.17385621368885 0.157219260931015 0.20546643435955;0.198692813515663 0.179679155349731 0.234818771481514;0.223529413342476 0.202139034867287 0.264171123504639;0.248366013169289 0.224598929286003 0.293523460626602;0.273202627897263 0.24705882370472 0.322875827550888;0.298039227724075 0.269518733024597 0.352228164672852;0.322875827550888 0.291978627443314 0.381580501794815;0.347712427377701 0.31443852186203 0.410932868719101;0.372549027204514 0.336898416280746 0.440285205841064;0.397385627031326 0.359358310699463 0.469637542963028;0.422222226858139 0.381818175315857 0.498989909887314;0.447058826684952 0.404278069734573 0.528342247009277;0.471895426511765 0.42673796415329 0.557694613933563;0.496732026338577 0.449197858572006 0.587046921253204;0.521568655967712 0.471657752990723 0.61639928817749;0.546405255794525 0.494117647409439 0.645751655101776;0.571241855621338 0.516577541828156 0.675103962421417;0.596078455448151 0.539037466049194 0.704456329345703;0.620915055274963 0.561497330665588 0.733808696269989;0.645751655101776 0.583957254886627 0.76316100358963;0.670588254928589 0.606417119503021 0.792513370513916;0.695424854755402 0.62887704372406 0.821865737438202;0.720261454582214 0.651336908340454 0.851218044757843;0.745098054409027 0.673796832561493 0.880570411682129;0.76993465423584 0.696256697177887 0.909922778606415;0.794771254062653 0.718716621398926 0.939275085926056;0.819607853889465 0.74117648601532 0.968627452850342;0.409803926944733 0.37058824300766 0.984313726425171;0 0 1;0.00666666682809591 0.200000002980232 0.993333339691162;0.0133333336561918 0.400000005960464 0.986666679382324;0.0200000014156103 0.600000023841858 0.979999959468842;0.0266666673123837 0.800000011920929 0.973333299160004;0.0333333350718021 1 0.966666638851166;0.0166666675359011 1 0.483333319425583;0 1 0;0.25 0.874509811401367 0;0.5 0.749019622802734 0;0.75 0.623529434204102 0;1 0.498039215803146 0;1 0.468742787837982 0;1 0.439446359872818 0;1 0.410149931907654 0;1 0.38085350394249 0;1 0.351557105779648 0;1 0.322260677814484 0;1 0.292964249849319 0;1 0.263667821884155 0;1 0.234371393918991 0;1 0.205074965953827 0;1 0.175778552889824 0;1 0.14648212492466 0;1 0.117185696959496 0;1 0.087889276444912 0;1 0.0585928484797478 0;1 0.0292964242398739 0;1 0 0];
% map  = [0 0 0;0.0161922834813595 0.0161922834813595 0.0161922834813595;0.032384566962719 0.032384566962719 0.032384566962719;0.0485768541693687 0.0485768541693687 0.0485768541693687;0.0647691339254379 0.0647691339254379 0.0647691339254379;0.0809614211320877 0.0809614211320877 0.0809614211320877;0.0971537083387375 0.0971537083387375 0.0971537083387375;0.113345988094807 0.113345988094807 0.113345988094807;0.129538267850876 0.129538267850876 0.129538267850876;0.145730555057526 0.145730555057526 0.145730555057526;0.161922842264175 0.161922842264175 0.161922842264175;0.178115129470825 0.178115129470825 0.178115129470825;0.194307416677475 0.194307416677475 0.194307416677475;0.210499688982964 0.210499688982964 0.210499688982964;0.226691976189613 0.226691976189613 0.226691976189613;0.242884263396263 0.242884263396263 0.242884263396263;0.259076535701752 0.259076535701752 0.259076535701752;0.275268822908401 0.275268822908401 0.275268822908401;0.291461110115051 0.291461110115051 0.291461110115051;0.307653397321701 0.307653397321701 0.307653397321701;0.323845684528351 0.323845684528351 0.323845684528351;0.340037971735001 0.340037971735001 0.340037971735001;0.35623025894165 0.35623025894165 0.35623025894165;0.3724225461483 0.3724225461483 0.3724225461483;0.38861483335495 0.38861483335495 0.38861483335495;0.4048071205616 0.4048071205616 0.4048071205616;0.420999377965927 0.420999377965927 0.420999377965927;0.437191665172577 0.437191665172577 0.437191665172577;0.453383952379227 0.453383952379227 0.453383952379227;0.469576239585876 0.469576239585876 0.469576239585876;0.485768526792526 0.485768526792526 0.485768526792526;0.501960813999176 0.501960813999176 0.501960813999176;1 0 0;1 0.0322580635547638 0;1 0.0645161271095276 0;1 0.0967741906642914 0;1 0.129032254219055 0;1 0.161290317773819 0;1 0.193548381328583 0;1 0.225806444883347 0;1 0.25806450843811 0;1 0.290322571992874 0;1 0.322580635547638 0;1 0.354838699102402 0;1 0.387096762657166 0;1 0.419354826211929 0;1 0.451612889766693 0;1 0.483870953321457 0;1 0.516129016876221 0;1 0.548387110233307 0;1 0.580645143985748 0;1 0.612903237342834 0;1 0.645161271095276 0;1 0.677419364452362 0;1 0.709677398204803 0;1 0.74193549156189 0;1 0.774193525314331 0;1 0.806451618671417 0;1 0.838709652423859 0;1 0.870967745780945 0;1 0.903225779533386 0;1 0.935483872890472 0;1 0.967741906642914 0;1 1 0];
map = [0 0 0;0.0161922834813595 0.0161922834813595 0.0161922834813595;0.032384566962719 0.032384566962719 0.032384566962719;0.0485768541693687 0.0485768541693687 0.0485768541693687;0.0647691339254379 0.0647691339254379 0.0647691339254379;0.0809614211320877 0.0809614211320877 0.0809614211320877;0.0971537083387375 0.0971537083387375 0.0971537083387375;0.113345988094807 0.113345988094807 0.113345988094807;0.129538267850876 0.129538267850876 0.129538267850876;0.145730555057526 0.145730555057526 0.145730555057526;0.161922842264175 0.161922842264175 0.161922842264175;0.178115129470825 0.178115129470825 0.178115129470825;0.194307416677475 0.194307416677475 0.194307416677475;0.210499688982964 0.210499688982964 0.210499688982964;0.226691976189613 0.226691976189613 0.226691976189613;0.242884263396263 0.242884263396263 0.242884263396263;0.259076535701752 0.259076535701752 0.259076535701752;0.275268822908401 0.275268822908401 0.275268822908401;0.291461110115051 0.291461110115051 0.291461110115051;0.307653397321701 0.307653397321701 0.307653397321701;0.323845684528351 0.323845684528351 0.323845684528351;0.340037971735001 0.340037971735001 0.340037971735001;0.35623025894165 0.35623025894165 0.35623025894165;0.3724225461483 0.3724225461483 0.3724225461483;0.38861483335495 0.38861483335495 0.38861483335495;0.4048071205616 0.4048071205616 0.4048071205616;0.420999377965927 0.420999377965927 0.420999377965927;0.437191665172577 0.437191665172577 0.437191665172577;0.453383952379227 0.453383952379227 0.453383952379227;0.469576239585876 0.469576239585876 0.469576239585876;0.485768526792526 0.485768526792526 0.485768526792526;0.501960813999176 0.501960813999176 0.501960813999176;0.0352941192686558 0.117647059261799 0.949019610881805;0.0352941192686558 0.135989874601364 0.948893129825592;0.0352941192686558 0.15433269739151 0.948766589164734;0.0352941192686558 0.172675520181656 0.948640108108521;0.0352941192686558 0.191018342971802 0.948513627052307;0.0352941192686558 0.209361165761948 0.948387086391449;0.0352941192686558 0.227703988552094 0.948260605335236;0.0352941192686558 0.246046811342239 0.948134124279022;0.0352941192686558 0.264389634132385 0.948007583618164;0.0352941192686558 0.282732456922531 0.947881102561951;0.0352941192686558 0.301075279712677 0.947754561901093;0.0352941192686558 0.319418102502823 0.947628080844879;0.0352941192686558 0.337760925292969 0.947501599788666;0.0352941192686558 0.356103748083115 0.947375059127808;0.0352941192686558 0.37444657087326 0.947248578071594;0.0352941192686558 0.392789393663406 0.947122097015381;0.0352941192686558 0.411132216453552 0.946995556354523;0.0352941192686558 0.429475039243698 0.946869075298309;0.0352941192686558 0.447817862033844 0.946742594242096;0.0352941192686558 0.466160655021667 0.946616053581238;0.0352941192686558 0.484503477811813 0.946489572525024;0.0352941192686558 0.502846300601959 0.946363091468811;0.0352941192686558 0.521189153194427 0.946236550807953;0.0352941192686558 0.539531946182251 0.94611006975174;0.0352941192686558 0.557874798774719 0.945983529090881;0.0352941192686558 0.576217591762543 0.945857048034668;0.0352941192686558 0.594560444355011 0.945730566978455;0.0352941192686558 0.612903237342834 0.945604026317596;0.0352941192686558 0.631246089935303 0.945477545261383;0.0352941192686558 0.649588882923126 0.94535106420517;0.0352941192686558 0.667931735515594 0.945224523544312;0.0352941192686558 0.686274528503418 0.945098042488098];

colormap(map)
% colormap(gray)

% Compute rows, cols
[m n] = size(X);
example_height = (n / example_width);

% Compute number of items to display
display_rows = floor(sqrt(m));
display_cols = ceil(m / display_rows);

% Between images padding
pad = 1;

% Setup blank display
display_array = - ones(pad + display_rows * (example_height + pad), ...
                       pad + display_cols * (example_width + pad));

% Copy each example into a patch on the display array
curr_ex = 1;
for j = 1:display_rows
	for i = 1:display_cols
		if curr_ex > m, 
			break; 
		end
		% Copy the patch
		
		% Get the max value of the patch
		max_val = max(abs(X(curr_ex, :)));
		display_array(pad + (j - 1) * (example_height + pad) + (1:example_height), ...
		              pad + (i - 1) * (example_width + pad) + (1:example_width)) = ...
						reshape(X(curr_ex, :), example_height, example_width) / max_val;
		curr_ex = curr_ex + 1;
	end
	if curr_ex > m, 
		break; 
	end
end

% Display Image
% h = imagesc(display_array, [-0.015 1]);
h = imagesc(display_array, [-1 1]);

% Do not show axis
axis image off

drawnow;
colorbar('westoutside','AxisLocation','out','Limits', [0 ,1], 'TickDirection', 'out','Ticks',[0.0 0.2 0.4 0.6 0.8 1],...
    'TickDirection','out','FontSize', 11 );

end
