function [h, display_array] = displayData(X, example_width)
%DISPLAYDATA Display 2D data in a nice grid
%   [h, display_array] = DISPLAYDATA(X, example_width) displays 2D data
%   stored in X in a nice grid. It returns the figure handle h and the 
%   displayed array if requested.
% map = [0 0 0;0.0161922834813595 0.0161922834813595 0.0161922834813595;0.032384566962719 0.032384566962719 0.032384566962719;0.0485768541693687 0.0485768541693687 0.0485768541693687;0.0647691339254379 0.0647691339254379 0.0647691339254379;0.0809614211320877 0.0809614211320877 0.0809614211320877;0.0971537083387375 0.0971537083387375 0.0971537083387375;0.113345988094807 0.113345988094807 0.113345988094807;0.129538267850876 0.129538267850876 0.129538267850876;0.145730555057526 0.145730555057526 0.145730555057526;0.161922842264175 0.161922842264175 0.161922842264175;0.178115129470825 0.178115129470825 0.178115129470825;0.194307416677475 0.194307416677475 0.194307416677475;0.210499688982964 0.210499688982964 0.210499688982964;0.226691976189613 0.226691976189613 0.226691976189613;0.242884263396263 0.242884263396263 0.242884263396263;0.259076535701752 0.259076535701752 0.259076535701752;0.275268822908401 0.275268822908401 0.275268822908401;0.291461110115051 0.291461110115051 0.291461110115051;0.307653397321701 0.307653397321701 0.307653397321701;0.323845684528351 0.323845684528351 0.323845684528351;0.340037971735001 0.340037971735001 0.340037971735001;0.35623025894165 0.35623025894165 0.35623025894165;0.3724225461483 0.3724225461483 0.3724225461483;0.38861483335495 0.38861483335495 0.38861483335495;0.4048071205616 0.4048071205616 0.4048071205616;0.420999377965927 0.420999377965927 0.420999377965927;0.437191665172577 0.437191665172577 0.437191665172577;0.453383952379227 0.453383952379227 0.453383952379227;0.469576239585876 0.469576239585876 0.469576239585876;0.485768526792526 0.485768526792526 0.485768526792526;0.501960813999176 0.501960813999176 0.501960813999176;0.0352941192686558 0.117647059261799 0.949019610881805;0.0352941192686558 0.135989874601364 0.948893129825592;0.0352941192686558 0.15433269739151 0.948766589164734;0.0352941192686558 0.172675520181656 0.948640108108521;0.0352941192686558 0.191018342971802 0.948513627052307;0.0352941192686558 0.209361165761948 0.948387086391449;0.0352941192686558 0.227703988552094 0.948260605335236;0.0352941192686558 0.246046811342239 0.948134124279022;0.0352941192686558 0.264389634132385 0.948007583618164;0.0352941192686558 0.282732456922531 0.947881102561951;0.0352941192686558 0.301075279712677 0.947754561901093;0.0352941192686558 0.319418102502823 0.947628080844879;0.0352941192686558 0.337760925292969 0.947501599788666;0.0352941192686558 0.356103748083115 0.947375059127808;0.0352941192686558 0.37444657087326 0.947248578071594;0.0352941192686558 0.392789393663406 0.947122097015381;0.0352941192686558 0.411132216453552 0.946995556354523;0.0352941192686558 0.429475039243698 0.946869075298309;0.0352941192686558 0.447817862033844 0.946742594242096;0.0352941192686558 0.466160655021667 0.946616053581238;0.0352941192686558 0.484503477811813 0.946489572525024;0.0352941192686558 0.502846300601959 0.946363091468811;0.0352941192686558 0.521189153194427 0.946236550807953;0.0352941192686558 0.539531946182251 0.94611006975174;0.0352941192686558 0.557874798774719 0.945983529090881;0.0352941192686558 0.576217591762543 0.945857048034668;0.0352941192686558 0.594560444355011 0.945730566978455;0.0352941192686558 0.612903237342834 0.945604026317596;0.0352941192686558 0.631246089935303 0.945477545261383;0.0352941192686558 0.649588882923126 0.94535106420517;0.0352941192686558 0.667931735515594 0.945224523544312;0.0352941192686558 0.686274528503418 0.945098042488098];

% Set example_width automatically if not passed in
if ~exist('example_width', 'var') || isempty(example_width) 
	example_width = round(sqrt(size(X, 2)));
end

[~, ~, ~, ~, min_conductance, max_conductance] = parameter();

% Gray Image
colormap(gray);

% Compute rows, cols
[m n] = size(X);
example_height = (n / example_width);

% Compute number of items to display
display_rows = floor(sqrt(m));
display_cols = ceil(m / display_rows);

% Between images padding
pad = 1;

% Setup blank display
display_array = -ones(pad + display_rows * (example_height + pad), ...
                       pad + display_cols * (example_width + pad));


% Copy each example into a patch on the display array
curr_ex = 1;
for j = 1:display_rows
	for i = 1:display_cols
		if curr_ex > m, 
			break; 
		end
		% Copy the patch
		
		% Get the max value of the patch
		max_val = max(abs(X(curr_ex, :)));
% 		max_val = max(max(abs(X)));
% 		max_val = 1;
%         X = (X-min(min(X)))/(max(max(X))-min(min(X)));
		display_array(pad + (j - 1) * (example_height + pad) + (1:example_height), ...
		              pad + (i - 1) * (example_width + pad) + (1:example_width)) = ...
						reshape(X(curr_ex, :), example_height, example_width) / max_val;
		curr_ex = curr_ex + 1;
	end
	if curr_ex > m, 
		break; 
	end
end

% Display Image
% h = imagesc(display_array, [-1 1]);
% h = imagesc(display_array, [-0.5 0.5]);
h = imagesc(display_array);
% [~, ~, ~, ~, min_conductance, max_conductance] = parameter();
% h = imagesc(display_array, [-(max_conductance - min_conductance) (max_conductance -min_conductance)]);


% Do not show axis
axis image off

drawnow;

end
